<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on Windows on Fridges </title>
    <link>http://ms-iot.github.io/post/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Mon, 30 Jun 2014 22:40:54 UTC</updated>
    
    <item>
      <title>Using a Wifi Adapter with the Intel Galileo</title>
      <link>http://ms-iot.github.io/post/using-a-wifi-adapter-with-the-intel-galileo/</link>
      <pubDate>Mon, 30 Jun 2014 22:40:54 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/using-a-wifi-adapter-with-the-intel-galileo/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Using a Wifi Gaming Adapter with the Intel Galileo&lt;/h2&gt;

&lt;p&gt;Wifi gaming adapters allow you to connect devices to wifi that otherwise could
only connect over LAN.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Purchase an adapter, such as &lt;a href=&#34;http://www.amazon.com/NETGEAR-WNCE2001-Universal-Internet-Adapter/dp/B007CO5DZ4/ref=sr_1_3?ie=UTF8&amp;amp;qid=1404169366&amp;amp;sr=8-3&amp;amp;keywords=wireless+gaming+adapter&#34;&gt;this recommended option&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow the instructions supplied with your gaming adapter to connect it to your wireless network.&lt;/li&gt;
&lt;li&gt;Connect the Gaming Adapter to the Galileo with an ethernet cable.&lt;/li&gt;
&lt;li&gt;The recommended adapter also includes a USB power cable; If your adapter includes a USB power cable connect it to the Galileo with a &lt;a href=&#34;http://www.amazon.com/Micro-USB-Male-Female-Adapter/dp/B0027YYMU6&#34;&gt;Micro USB Male to USB A Female Adapter&lt;/a&gt; . The Galileo can provide sufficient power to the recommended adapter.&lt;/li&gt;
&lt;li&gt;Connect your development machine to the same wireless network as the gaming adapter.&lt;/li&gt;
&lt;li&gt;Ping the Galileo by hostname and ensure it is connected to the network.&lt;/li&gt;
&lt;li&gt;You should now be able to deploy to the Galileo over wireless network!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How To: Build a NodeBot</title>
      <link>http://ms-iot.github.io/post/how-to-build-a-nodebot/</link>
      <pubDate>Fri, 27 Jun 2014 17:47:29 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/how-to-build-a-nodebot/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;How to Build a Nodebot with Windows for Intel Galileo&lt;/h1&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Materials&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Intel Galileo flashed with uefi bootloader (how can user check this?)&lt;/li&gt;
&lt;li&gt;Windows for Devices (or whatever seriously needs a name) on SD card&lt;/li&gt;
&lt;li&gt;Ethernet cable&lt;/li&gt;
&lt;li&gt;Arduino motor shield&lt;/li&gt;
&lt;li&gt;Makeblock robot kit, or any robot with 2 motors (a specific type of motor or just whatever?)&lt;/li&gt;
&lt;li&gt;Netgear Gaming Adapter&lt;/li&gt;
&lt;li&gt;Mophie/Anker battery pack (5V, 2.1A)&lt;/li&gt;
&lt;li&gt;USB to USB Micro adapter&lt;/li&gt;
&lt;li&gt;USB to barrel plug (add instructions on how to make this or get it in another way)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Follow the getting started guide to get hello blinky working with Galileo for Windows. $(external link to docs)&lt;/li&gt;
&lt;li&gt;Connect the motor shield to the galileo and attach the 2 motors to the shield.&lt;/li&gt;
&lt;li&gt;Find the Sample Project in $(samples repository) named FirmataForGalileo and open the solution.&lt;/li&gt;
&lt;li&gt;Run the solution on the remote debugger.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ms-iot.github.io/windows-on-fridges/post/installingnode/&#34;&gt;Install Nodejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clone the wof-nodebot repo&lt;/li&gt;
&lt;li&gt;To run the node server, execute the following command in cmd line
&lt;code&gt;
npm install 
&lt;/code&gt;
You will need to add node and npm to your path.&lt;/li&gt;
&lt;li&gt;Run the node server either on the Galileo or from a computer and pick the IP address accordingly. Run the server with
&lt;code&gt;
node server.js
&lt;/code&gt;
from the wof-nodebot directory.&lt;/li&gt;
&lt;li&gt;Use curl to send a post request to http://&lt;robot ip address&gt;/robot in the post body include
&lt;code&gt;
{ &amp;quot;direction&amp;quot; : &amp;quot;left/right/forward/backward&amp;quot;, &amp;quot;speed&amp;quot;:0-255, &amp;quot;duration&amp;quot;:2000 }
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Steps when debugging&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Run Firmata on the Galileo from Visual Studio.&lt;/li&gt;
&lt;li&gt;Run the Node server from cmd line.&lt;/li&gt;
&lt;li&gt;If you have to stop the node server or Firmata currently you must reboot the Galileo.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Making a Nodebot with Windows on Devices</title>
      <link>http://ms-iot.github.io/post/making-a-nodebot-with-windows-on-devices/</link>
      <pubDate>Mon, 23 Jun 2014 22:09:36 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/making-a-nodebot-with-windows-on-devices/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Wireless Nodebot&lt;/h2&gt;

&lt;p&gt;The Intel Galileo with Windows is a great platform for building NodeBots as
the board itself can run the node server that controls the robot. This allows
you to use one board for your server and hardware. Windows on the Galileo makes
arduino development easy and much more powerful since you are able to use
Visual Studio and other tools that you already know. In the case of this project
however you can do all of your arduino programming through javascript using
Nodejs and Cylonjs or Johnny-Five. For this project Johnny-Five made more sense
as it had greater support for the types of motors that I wanted to use. On the
board itself we are using standard &lt;a href=&#34;firmata.com&#34;&gt;firmata&lt;/a&gt;, the arduino protocol, to talk to
the node server. The firmata running on Galileo for Windows has been ported
and does not require the Galileo plugin normally used with Johnny-Five.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ms-iot.github.io/post/about/</link>
      <pubDate>Mon, 23 Jun 2014 21:54:38 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/about/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Windows on Fridges&lt;/h2&gt;

&lt;p&gt;Windows on Fridges is an end to end solution using Windows on the Intel Galileo and
Microsoft Azure.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>