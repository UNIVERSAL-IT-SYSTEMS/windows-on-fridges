<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Posts on Windows on Fridges </title>
    <link>http://ms-iot.github.io/post/index.xml</link>
    <language>en-US</language>
    <author>Enthusiastic Hugo User</author>
    <rights>Copyright (c) 2014, Enthusiastic Hugo User; all rights reserved.</rights>
    <updated>Fri, 27 Jun 2014 17:50:06 UTC</updated>
    
    <item>
      <title>Installing Node</title>
      <link>http://ms-iot.github.io/post/installingnode</link>
      <pubDate>Fri, 27 Jun 2014 17:50:06 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/installingnode</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Installing Nodejs&lt;/h2&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Local machine&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download &lt;a href=&#34;http://nodejs.org&#34;&gt;Nodejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The MSI installer should take care of anything including adding node to your path variable.&lt;/li&gt;
&lt;li&gt;To test your installation write a simple hello world web server&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;var http = require(&#39;http&#39;);
http.createServer(function (req, res) {
    res.writeHead(200, {&#39;Content-Type&#39;: &#39;text/plain&#39;});
    res.end(&#39;Hello World\n&#39;);
}).listen(1337, &#39;127.0.0.1&#39;);
console.log(&#39;Server running at http://127.0.0.1:1337/&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run the server from command line&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;node path/to/server.js
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How To: Build a NodeBot</title>
      <link>http://ms-iot.github.io/post/nodebothowto</link>
      <pubDate>Fri, 27 Jun 2014 17:47:29 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/nodebothowto</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;How to Build a Nodebot with Windows for Intel Galileo&lt;/h1&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Materials&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Intel Galileo flashed with uefi bootloader (how can user check this?)&lt;/li&gt;
&lt;li&gt;Windows for Devices (or whatever seriously needs a name) on SD card&lt;/li&gt;
&lt;li&gt;Ethernet cable&lt;/li&gt;
&lt;li&gt;Arduino motor shield&lt;/li&gt;
&lt;li&gt;Makeblock robot kit, or any robot with 2 motors (a specific type of motor or just whatever?)&lt;/li&gt;
&lt;li&gt;Netgear Gaming Adapter&lt;/li&gt;
&lt;li&gt;Mophie/Anker battery pack (5V, 2.1A)&lt;/li&gt;
&lt;li&gt;USB to USB Micro adapter&lt;/li&gt;
&lt;li&gt;USB to barrel plug (add instructions on how to make this or get it in another way)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Follow the getting started guide to get hello blinky working with Galileo for Windows. $(external link to docs)&lt;/li&gt;
&lt;li&gt;Connect the motor shield to the galileo and attach the 2 motors to the shield.&lt;/li&gt;
&lt;li&gt;Find the Sample Project in $(samples repository) named FirmataForGalileo and open the solution.&lt;/li&gt;
&lt;li&gt;Run the solution on the remote debugger.&lt;/li&gt;
&lt;li&gt;To run the node server clone the wof-nodebot repo and from command line run
&lt;code&gt;
npm install 
&lt;/code&gt;
You will need to add node and npm to your path.&lt;/li&gt;
&lt;li&gt;Run the node server either on the Galileo or from a computer and pick the IP address accordingly. Run the server with
&lt;code&gt;
node server.js
&lt;/code&gt;
from the wof-nodebot directory.&lt;/li&gt;
&lt;li&gt;Use curl to send a post request to http://&lt;robot ip address&gt;/robot in the post body include
&lt;code&gt;
{ &amp;quot;direction&amp;quot; : &amp;quot;left/right/forward/backward&amp;quot;, &amp;quot;speed&amp;quot;:0-255, &amp;quot;duration&amp;quot;:2000 }
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Making a Nodebot with Windows on Devices</title>
      <link>http://ms-iot.github.io/post/nodebot</link>
      <pubDate>Mon, 23 Jun 2014 22:09:36 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/nodebot</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Wireless Nodebot&lt;/h2&gt;

&lt;p&gt;The Intel Galileo with Windows is a great platform for building NodeBots as
the board itself can run the node server that controls the robot. This allows
you to use one board for your server and hardware. Windows on the Galileo makes
arduino development easy and much more powerful since you are able to use
Visual Studio and other tools that you already know. In the case of this project
however you can do all of your arduino programming through javascript using
Nodejs and Cylonjs or Johnny-Five. For this project Johnny-Five made more sense
as it had greater support for the types of motors that I wanted to use. On the
board itself we are using standard &lt;a href=&#34;firmata.com&#34;&gt;firmata&lt;/a&gt;, the arduino protocol, to talk to
the node server. The firmata running on Galileo for Windows has been ported
and does not require the Galileo plugin normally used with Johnny-Five.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ms-iot.github.io/post/about</link>
      <pubDate>Mon, 23 Jun 2014 21:54:38 UTC</pubDate>
      <author>Enthusiastic Hugo User</author>
      <guid>http://ms-iot.github.io/post/about</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;Windows on Fridges&lt;/h2&gt;

&lt;p&gt;Windows on Fridges is an end to end solution using Windows on the Intel Galileo and
Microsoft Azure.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>